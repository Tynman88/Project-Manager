{"ast":null,"code":"var _jsxFileName = \"/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({\n    name: '',\n    client: '',\n    startDate: '',\n    endDate: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => p.id === currentProject.id ? currentProject : p));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({\n        name: '',\n        client: '',\n        startDate: '',\n        endDate: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const openModalForEdit = project => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n  const openModalForAdd = () => {\n    setCurrentProject({\n      name: '',\n      client: '',\n      startDate: '',\n      endDate: ''\n    });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"project-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => openModalForEdit(project),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModalForAdd,\n          children: \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProjectModal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      onSubmit: handleSubmit,\n      project: currentProject,\n      setProject: setCurrentProject,\n      isEditing: isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"riwMGyNu0+Otx3eCHwS9CkkUS5A=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","fetchProjects","createProject","updateProject","AddProjectModal","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","currentProject","setCurrentProject","name","client","startDate","endDate","isModalOpen","setIsModalOpen","isEditing","setIsEditing","getProjects","data","error","console","handleSubmit","e","preventDefault","map","p","id","createdProject","openModalForEdit","project","openModalForAdd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onSubmit","setProject","_c","$RefreshReg$"],"sources":["/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css';  // Import the new CSS file\n\nconst ProjectList = () => {\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({ name: '', client: '', startDate: '', endDate: '' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => (p.id === currentProject.id ? currentProject : p)));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const openModalForEdit = (project) => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n\n  const openModalForAdd = () => {\n    setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"project-list-container\">\n      <div className=\"project-table-wrapper\">\n        <h1>Project List</h1>\n        <table className=\"project-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Client</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {projects.map((project) => (\n              <tr key={project.id} onClick={() => openModalForEdit(project)}>\n                <td>{project.name}</td>\n                <td>{project.client}</td>\n                <td>{project.startDate}</td>\n                <td>{project.endDate}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"button-container\">\n          <button onClick={openModalForAdd}>Add New Project</button>\n        </div>\n      </div>\n      <AddProjectModal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        onSubmit={handleSubmit}\n        project={currentProject}\n        setProject={setCurrentProject}\n        isEditing={isEditing}\n      />\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}