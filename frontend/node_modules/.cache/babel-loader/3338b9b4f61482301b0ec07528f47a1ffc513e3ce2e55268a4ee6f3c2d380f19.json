{"ast":null,"code":"var _jsxFileName = \"/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject, deleteProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({\n    name: '',\n    client: '',\n    startDate: '',\n    endDate: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!currentProject.name || !currentProject.client) {\n      alert('Project name and client name are required.');\n      return;\n    }\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => p.id === currentProject.id ? currentProject : p));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({\n        name: '',\n        client: '',\n        startDate: '',\n        endDate: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteProject(id);\n      setProjects(projects.filter(p => p.id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const openModalForEdit = project => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n  const openModalForAdd = () => {\n    setCurrentProject({\n      name: '',\n      client: '',\n      startDate: '',\n      endDate: ''\n    });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"project-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => openModalForEdit(project),\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => openModalForEdit(project),\n              children: project.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => openModalForEdit(project),\n              children: project.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => openModalForEdit(project),\n              children: project.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openModalForEdit(project),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(project.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openModalForAdd,\n          children: \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProjectModal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      onSubmit: handleSubmit,\n      project: currentProject,\n      setProject: setCurrentProject,\n      isEditing: isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"riwMGyNu0+Otx3eCHwS9CkkUS5A=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","fetchProjects","createProject","updateProject","deleteProject","AddProjectModal","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","currentProject","setCurrentProject","name","client","startDate","endDate","isModalOpen","setIsModalOpen","isEditing","setIsEditing","getProjects","data","error","console","handleSubmit","e","preventDefault","alert","map","p","id","createdProject","handleDelete","filter","openModalForEdit","project","openModalForAdd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onSubmit","setProject","_c","$RefreshReg$"],"sources":["/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject, deleteProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css';  // Import the new CSS file\n\nconst ProjectList = () => {\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({ name: '', client: '', startDate: '', endDate: '' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!currentProject.name || !currentProject.client) {\n      alert('Project name and client name are required.');\n      return;\n    }\n\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => (p.id === currentProject.id ? currentProject : p)));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteProject(id);\n      setProjects(projects.filter(p => p.id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const openModalForEdit = (project) => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n\n  const openModalForAdd = () => {\n    setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div className=\"project-list-container\">\n      <div className=\"project-table-wrapper\">\n        <h1>Project List</h1>\n        <table className=\"project-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Client</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {projects.map((project) => (\n              <tr key={project.id}>\n                <td onClick={() => openModalForEdit(project)}>{project.name}</td>\n                <td onClick={() => openModalForEdit(project)}>{project.client}</td>\n                <td onClick={() => openModalForEdit(project)}>{project.startDate}</td>\n                <td onClick={() => openModalForEdit(project)}>{project.endDate}</td>\n                <td>\n                  <button onClick={() => openModalForEdit(project)}>Edit</button>\n                  <button onClick={() => handleDelete(project.id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"button-container\">\n          <button onClick={openModalForAdd}>Add New Project</button>\n        </div>\n      </div>\n      <AddProjectModal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        onSubmit={handleSubmit}\n        project={currentProject}\n        setProject={setCurrentProject}\n        isEditing={isEditing}\n      />\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}