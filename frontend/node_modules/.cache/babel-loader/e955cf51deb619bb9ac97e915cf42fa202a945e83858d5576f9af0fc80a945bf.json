{"ast":null,"code":"var _jsxFileName = \"/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject, deleteProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport './Modal.css';\nimport './ProjectList.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({\n    name: '',\n    client: '',\n    startDate: '',\n    endDate: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState(null);\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!currentProject.name || !currentProject.client) {\n      alert('Project name and client name are required.');\n      return;\n    }\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => p.id === currentProject.id ? currentProject : p));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({\n        name: '',\n        client: '',\n        startDate: '',\n        endDate: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const confirmDelete = project => {\n    setProjectToDelete(project);\n    setIsDeleteModalOpen(true);\n  };\n  const handleDelete = async () => {\n    try {\n      await deleteProject(projectToDelete.id);\n      setProjects(projects.filter(p => p.id !== projectToDelete.id));\n      setIsDeleteModalOpen(false);\n      setProjectToDelete(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const openModalForEdit = project => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"ZfgJfgC4JgMcv1I2/0bDdwhhBeo=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","fetchProjects","createProject","updateProject","deleteProject","AddProjectModal","ConfirmDeleteModal","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","currentProject","setCurrentProject","name","client","startDate","endDate","isModalOpen","setIsModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","isEditing","setIsEditing","projectToDelete","setProjectToDelete","getProjects","data","error","console","handleSubmit","e","preventDefault","alert","map","p","id","createdProject","confirmDelete","project","handleDelete","filter","openModalForEdit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject, deleteProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport './Modal.css';\nimport './ProjectList.css';  // Import the new CSS file\n\nconst ProjectList = () => {\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({ name: '', client: '', startDate: '', endDate: '' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [projectToDelete, setProjectToDelete] = useState(null);\n\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!currentProject.name || !currentProject.client) {\n      alert('Project name and client name are required.');\n      return;\n    }\n\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => (p.id === currentProject.id ? currentProject : p)));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const confirmDelete = (project) => {\n    setProjectToDelete(project);\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteProject(projectToDelete.id);\n      setProjects(projects.filter(p => p.id !== projectToDelete.id));\n      setIsDeleteModalOpen(false);\n      setProjectToDelete(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const openModalForEdit = (project) => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div>\n      {/* Your JSX content for the ProjectList component goes here */}\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}