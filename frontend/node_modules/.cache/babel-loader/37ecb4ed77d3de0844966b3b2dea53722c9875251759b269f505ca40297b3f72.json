{"ast":null,"code":"var _jsxFileName = \"/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({\n    name: '',\n    client: '',\n    startDate: '',\n    endDate: ''\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => p.id === currentProject.id ? currentProject : p));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({\n        name: '',\n        client: '',\n        startDate: '',\n        endDate: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const openModalForEdit = project => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n  const openModalForAdd = () => {\n    setCurrentProject({\n      name: '',\n      client: '',\n      startDate: '',\n      endDate: ''\n    });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => openModalForEdit(project),\n        children: [project.name, \" - \", project.client]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModalForAdd,\n      children: \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddProjectModal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      onSubmit: handleSubmit,\n      project: currentProject,\n      setProject: setCurrentProject,\n      isEditing: isEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"riwMGyNu0+Otx3eCHwS9CkkUS5A=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","fetchProjects","createProject","updateProject","AddProjectModal","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","currentProject","setCurrentProject","name","client","startDate","endDate","isModalOpen","setIsModalOpen","isEditing","setIsEditing","getProjects","data","error","console","handleSubmit","e","preventDefault","map","p","id","createdProject","openModalForEdit","project","openModalForAdd","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","onSubmit","setProject","_c","$RefreshReg$"],"sources":["/workspaces/176518875/project-manager/frontend/src/components/ProjectList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchProjects, createProject, updateProject } from '../services/api';\nimport AddProjectModal from './AddProjectModal';\nimport './Modal.css';\nimport './ProjectList.css';\n\nconst ProjectList = () => {\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState({ name: '', client: '', startDate: '', endDate: '' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    const getProjects = async () => {\n      try {\n        const data = await fetchProjects();\n        setProjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getProjects();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        await updateProject(currentProject);\n        setProjects(projects.map(p => (p.id === currentProject.id ? currentProject : p)));\n      } else {\n        const createdProject = await createProject(currentProject);\n        setProjects([...projects, createdProject]);\n      }\n      setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const openModalForEdit = (project) => {\n    setCurrentProject(project);\n    setIsEditing(true);\n    setIsModalOpen(true);\n  };\n\n  const openModalForAdd = () => {\n    setCurrentProject({ name: '', client: '', startDate: '', endDate: '' });\n    setIsEditing(false);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <div>\n      <h1>Project List</h1>\n      <ul>\n        {projects.map((project) => (\n          <li key={project.id} onClick={() => openModalForEdit(project)}>\n            {project.name} - {project.client}\n          </li>\n        ))}\n      </ul>\n      <button onClick={openModalForAdd}>Add New Project</button>\n      <AddProjectModal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        onSubmit={handleSubmit}\n        project={currentProject}\n        setProject={setCurrentProject}\n        isEditing={isEditing}\n      />\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}